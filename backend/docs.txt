********************************************
1- New App
********************************************
>> nest new backend 
>> npm run start:dev

********************************************
2- Configurations
********************************************
>> Create config folder 
>> create app.config and database.config, and add files for other services as u go 
>> npm i --save @nestjs/config

------------------------
>> in the main app.module 

imports:[ConfigModule.forRoot({
      isGlobal: true, // to prevent importing it in any module we need it 
      load: [databaseConfig, appConfig],
      envFilePath: '.env',
      ignoreEnvFile: false, // if u wanna ignore it 
      cache: true, // to speed up the process 
    }),
    ...
]
------------------------
# custom configuration , with Custom validate (class-transformer) and namespaces ( registerAs )

1- create dynamic validation function 
common/utils/validate-config.ts 

2- create app,database configuration

------------------------
# to use port in main.ts 

const configService = app.get(ConfigService)
configService.get('app.port')


********************************************
3- base controller and services
********************************************
>> nest g resource auth 
>> nest g resource modules/profiles 
>> nest g resource modules/posts


********************************************
4- convert ERD to database entites 
********************************************


********************************************
5- database
********************************************
>> docker.compose 
>> nest g module database
>> create abstract.entity.ts
------------------
import { Entity, PrimaryGeneratedColumn } from 'typeorm';

@Entity()
export class AbstractEntity<T> {
  @PrimaryGeneratedColumn()
  id: number;

  constructor(entity: Partial<T>) {
    Object.assign(this, entity); // is kinda like updating the object with external info, if it already exist
  }
}
------------------
>> npm install --save @nestjs/typeorm typeorm mysql2

********************************************
6- 
********************************************